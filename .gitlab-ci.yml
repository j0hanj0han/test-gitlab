# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.7

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python --version  # For debugging
  - pip install --upgrade pip
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate

stages:          # List of stages for jobs, and their order of execution
  - build
  - run
  - test
  - deploy

install-package-job:
    stage: build
    script:
        - echo "Installing package cloud resources script..."
        - pip install .
        - pip freeze # for debug purpose

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - pip install '.[test]'
    - echo "Running unit tests..."
    - pytest --cov=mypypipackage tests/

flake8-job:
  stage: test
  script:
    - echo "Running Flake8 for the whole package"
    - pip install flake8
    - flake8 ./mypypipackage

hello-world-job:
  stage: run
  script:
    - echo "Run the main into the package"
    - python ./mypypipackage/main.py
